/*---------------------------------------------------------------------------------------------
 *  Copyright (c) Microsoft Corporation. All rights reserved.
 *  Licensed under the MIT License. See License.txt in the project root for license information.
 *--------------------------------------------------------------------------------------------*/
const vscodeServerStartTime=Date.now();function start(){if("--exec"===process.argv[2])return process.argv.splice(1,2),void require(process.argv[1]);const e=require("minimist")(process.argv.slice(2),{boolean:["start-server","list-extensions","print-ip-address"],string:["install-extension","install-builtin-extension","uninstall-extension","locate-extension","socket-path","host","port"]});if(!(e["start-server"]||!e["list-extensions"]&&!e["install-extension"]&&!e["install-builtin-extension"]&&!e["uninstall-extension"]&&!e["locate-extension"]))return void loadCode().then(e=>{e.spawnCli()});let r=null;const t=()=>(r||(r=loadCode().then(e=>e.createServer(s))),r),n=require("http"),o=require("os");let s=null;const i=n.createServer(async(e,r)=>{return(await t()).handleRequest(e,r)});i.on("upgrade",async(e,r)=>{return(await t()).handleUpgrade(e,r)}),i.on("error",async e=>{return(await t()).handleServerError(e)});const a=e["socket-path"]?{path:e["socket-path"]}:{host:e.host,port:parsePort(e.port)};i.listen(a,async()=>{
let r="\n\n*\n* Visual Studio Code Server\n*\n* Reminder: You may only use this software with Visual Studio family products,\n* as described in the license https://aka.ms/vscode-remote/license\n*\n\n";if("number"==typeof a.port&&e["print-ip-address"]){const e=o.networkInterfaces();Object.keys(e).forEach((function(t){e[t].forEach((function(e){e.internal||"IPv4"!==e.family||(r+=`IP Address: ${e.address}\n`)}))}))}if(null===(s=i.address()))throw new Error("Unexpected server address");r+=`Extension host agent listening on ${"string"==typeof s?s:s.port}\n`,console.log(r),global.vscodeServerListenTime=require("perf_hooks").performance.now(),await t()}),process.on("exit",()=>{i.close()})}function parsePort(e){try{if(e)return parseInt(e)}catch(e){console.log("Port is not a number, using 8000 instead.")}return 8e3}function loadCode(){return new Promise((e,r)=>{const t=require("path");require("../base/common/performance").importEntries(["vscodeServerStart",vscodeServerStartTime]),
process.env.VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH=process.env.VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH||t.join(__dirname,"..","..","..","remote","node_modules"),require("../../bootstrap-node").injectNodeModuleLookupPath(process.env.VSCODE_INJECT_NODE_MODULE_LOOKUP_PATH),require("../../bootstrap-amd").load("vs/server/remoteExtensionHostAgent",e,r)})}global.vscodeServerStartTime=require("perf_hooks").performance.now(),start();
//# sourceMappingURL=https://ticino.blob.core.windows.net/sourcemaps/ea3859d4ba2f3e577a159bc91e3074c5d85c0523/core/vs/server/main.js.map
